@using Assignment_2.Models
@model IEnumerable<ItemSalesInfo>

@{
    ViewBag.Title = "Summary over all locations";
}

<h2>Summary over all locations</h2>
Total cost price : $ <p id="cp"> @ViewBag.totalCp</p> 
<br/>
Total selling price : $ <p id="sp" > @ViewBag.totalSp </p>

<table border="1">

    <tr>
        <th>Item SKU</th>
        <th>Quantity Sold</th>
        <th>Total CP</th>
        <th>Total SP</th>
    </tr>

    @foreach (ItemSalesInfo i in Model)
    {
        <tr id="@i.name">
            <td>@i.name</td>
            <td>@i.quantitySold</td>
            <td>@i.foreverCP</td>
            <td>@i.foreverSP</td>
        </tr>
    }
</table>


@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.

            chat.client.updateSummary = function (cp, sp) {
                //Update summary information.
                $('#cp').text(htmlEncode(cp));
                $('#sp').text(htmlEncode(sp));
            };

            chat.client.updateItemSales = function (location, sku, quantity, cp, sp) {
                //Simpler to reload at this point in time
                //Ideally should keep a in memory aggregate
                window.location.href = window.location.href;
            };

            $.connection.hub.start().done(function () {
            
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}


